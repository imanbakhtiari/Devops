upstream docker.abalon.cloud {
    server 127.0.0.1:8082;
    keepalive 64; # Allow up to 64 idle connections to be kept alive
}

server {
    server_name docker.abalon.cloud;

    location / {
        proxy_redirect      off;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    Host $http_host;

        # Proxy timeouts
        proxy_connect_timeout 120s;   # Time to wait for connection to upstream
        proxy_send_timeout 120s;     # Time to wait for upstream server to receive the request
        proxy_read_timeout 120s;     # Time to wait for upstream server to send a response
        send_timeout 120s;           # Time to wait for the client to acknowledge data
        client_max_body_size 4096M; # Adjust as per your requirement  
        # Increase buffer sizes for large responses
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Pass the request to the upstream
        proxy_pass http://docker.abalon.cloud;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/docker.abalon.cloud/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/docker.abalon.cloud/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Keepalive timeout
    keepalive_timeout 120s;

    # Increase client request timeouts
    client_body_timeout 120s;
    client_header_timeout 120s;
}

server {
    if ($host = docker.abalon.cloud) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name docker.abalon.cloud;
    listen 80;
    return 404; # managed by Certbot
}
